pages - private
basicIntroduction
	"This method was automatically generated. Edit it using:"
	"TraceDebuggerHelp edit: #basicIntroduction"
	<generated>
	^(HelpTopic
		title: 'Welcome'
		contents: 
'Welcome to TraceDebugger
<#figureBug> <#figureBug> <#figureBug> <#figureBug>

The TraceDebugger is a lightweight and efficient back-in-time debugger for Squeak to trace and retrace past method invocations and state changes. Key features include:

- Interactive call tree instead of a stack list
- Step back button
- New navigation shortcuts (jump to sender, jump to callee, ...)
- Context search dialog
- Context filters (by package, selector, receiver, ...)
- Snapshot inspectors/explorers for objects during debugging
- History explorer for navigating through the side effects of objects

To get started quickly, directly open a trace debugger or browse all examples. Alternatively, you can follow this short tutorial.

Resize this window to recommended dimensions!
]style[(24 1 12 1 12 1 25 6 167 21 27 16 3 24 41 14 10 15 41 29 32 16 77 30 4 19 54 44)a0b,a0,,a0,,a0,,a0,,b,,b,,b,,b,,b,,b,,b,,Rcode:// TraceDebugger exampleRegex. nil;,,Rcode:// ToolSet browseClass: (Smalltalk classNamed: #TraceDebugger) class category: ''examples''.;,,Rcode://
TraceDebuggerHelp resizeWindow: (Project current world findA: SystemWindow);f1!' readStream nextChunkText)
			key: #basicIntroduction;
			shouldStyle: false;
			yourself