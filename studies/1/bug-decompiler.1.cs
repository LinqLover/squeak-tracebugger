'From Squeak6.0alpha of 13 February 2022 [latest update: #21287] on 13 February 2022 at 10:00:49 pm'!!Decompiler methodsFor: 'control' stamp: 'nice 3/11/2020 21:59'!doClosureCopy: aCompiledBlock copiedValues: blockCopiedValues	"implementation note: must be invoked on a copy because it modifies states"	| savedPC blockArgs blockTemps blockTempsOffset block mark |	numLocalTemps := aCompiledBlock numTemps - aCompiledBlock numArgs - blockCopiedValues size.	blockTempsOffset := aCompiledBlock numArgs + blockCopiedValues size.	(blockStartsToTempVars notNil "implies we were intialized with temp names."	 and: [blockStartsToTempVars includesKey: aCompiledBlock])		ifTrue:			[tempVars := blockStartsToTempVars at: aCompiledBlock]		ifFalse:			[blockArgs := (1 to: aCompiledBlock numArgs) collect:							[:i| (constructor									codeTemp: i - 1									named: 't', (tempVarCount + i) printString)								  beBlockArg].			blockTemps := (1 to: numLocalTemps) collect:							[:i| constructor									codeTemp: i + blockTempsOffset - 1									named: 't', (tempVarCount + i + aCompiledBlock numArgs) printString].			tempVars := blockArgs, blockCopiedValues, blockTemps].	tempVarCount := tempVarCount + aCompiledBlock numArgs + numLocalTemps.	lastJumpIfPcStack := OrderedCollection new.	caseExits := OrderedCollection new.	statements := OrderedCollection new: 20.	savedPC := pc.	self method: (method := aCompiledBlock) pc: aCompiledBlock initialPC.	mark := stack size.	block := self blockTo: aCompiledBlock endPC.	mark = stack size ifFalse: [self error: 'block did alter the stack'].	^((constructor			codeArguments: (tempVars copyFrom: 1 to: aCompiledBlock numArgs)			temps: (tempVars copyFrom: blockTempsOffset + 1 to: blockTempsOffset + numLocalTemps)			block: block)				pc: aCompiledBlock -> savedPC; "c.f. BytecodeEncoder>>pc"				yourself).! !